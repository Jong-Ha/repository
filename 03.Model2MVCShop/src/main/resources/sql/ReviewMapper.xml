<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
				
<mapper namespace="ReviewMapper">

  	<resultMap type="com.model2.mvc.service.domain.Review" id="ReviewSelectMap">
 		<result property="tranNo"			column="tran_no"		jdbcType="INTEGER"/>
  		<result property="userId"			column="user_id"		jdbcType="VARCHAR"/>
  		<result property="fileName"			column="image_file"		jdbcType="VARCHAR"/>
  		<result property="grade"			column="grade"			jdbcType="NUMERIC"/>
  		<result property="detail"			column="detail"			jdbcType="VARCHAR"/>
  		<result property="reviewDate"		column="review_date"	jdbcType="DATE"/>
  		<result property="rowNum"			column="row_num"		jdbcType="VARCHAR"/>
  		<association property="prod" column="prod_no" javaType="product" select="getProduct"/>
  		<collection property="FileList" column="tran_no" ofType="file" select="getReviewFileList"/>
  	</resultMap>
  	
  	<resultMap type="com.model2.mvc.service.domain.Product" id="productSelectMap">
  		<result property="manuDate"		column="manufacture_day"	jdbcType="VARCHAR"/>
  		<result property="price"		column="price"				jdbcType="NUMERIC"/>
  		<result property="prodDetail"	column="prod_detail"		jdbcType="VARCHAR"/>
  		<result property="prodName"		column="prod_name"			jdbcType="VARCHAR"/>
  		<result property="prodNo"		column="prod_no"			jdbcType="NUMERIC"/>
  		<result property="regDate"		column="reg_date"			jdbcType="DATE"/>
  		<result property="rowNum"		column="row_num"			jdbcType="VARCHAR"/>
  		<result property="amount"		column="product_amount"		jdbcType="NUMERIC"/>
  		<result property="proTranCode"	column="tran_code"			jdbcType="VARCHAR"/>
  		<association property="mainFile" column="prod_no" javaType="file" select="getMainFile"/>
  	</resultMap>
  	
  	<resultMap type="file" id="fileResultMap">
		<id property="refKey" 			column="ref_key" 		jdbcType="NUMERIC"/>
		<result property="fileName" 		column="file_name" 		jdbcType="VARCHAR"/>
		<result property="originalFileName"	column="original_name" 	jdbcType="VARCHAR"/>
		<result property="path" 			column="path" 			jdbcType="VARCHAR"/>
		<result property="size" 			column="file_size" 		jdbcType="NUMERIC"/>
		<result property="imageType" 		column="image_type" 	jdbcType="NUMERIC"/>
		<result property="target" 			column="target" 		jdbcType="VARCHAR"/>
  	</resultMap>
  	
  	<select id="getReviewFileList" resultMap="fileResultMap">
  		SELECT ref_key, file_name, original_name, path, file_size, image_type, target
  		FROM files
  		WHERE ref_key = #{tran_no} AND target = 'review'
  	</select>
  	
  	<select id="getMainFile" resultMap="fileResultMap">
  		SELECT ref_key, file_name, original_name, path, file_size, image_type, target
  		FROM files
  		<where>
  			target = 'product'
  			AND ref_key = #{prodNo}
  			AND image_type = 'main'
  		</where>
  	</select>
  	
  	<select id="getProduct" resultMap="productSelectMap">
  		SELECT manufacture_day, price, prod_detail, prod_name, prod_no, reg_date, amount
  		FROM product
  		<where>
  			prod_no = #{prodNo}
  		</where>
  	</select>
  	
  	<insert id="addReview" parameterType="review">
  		INSERT
  		INTO review(tran_no,prod_no,user_id,grade,detail,review_date)
  		VALUES(	#{tranNo}, 
  				#{prod.prodNo}, 
  				#{userId}, 
  				#{grade}, 
  				#{detail}, 
  				SYSDATE	)
  	</insert>
  	
  	<select id="getReview" parameterType="int" resultMap="ReviewSelectMap">
  		SELECT r.tran_no, r.prod_no, r.user_id, r.grade, r.detail, r.review_date
  		FROM review r
  		<where>
  			tran_no = #{tranNo}
  		</where>
  	</select>
  	
  	<update id="updateReview" parameterType="review">
  		UPDATE review
  		<set>
  			grade = #{grade},
  			detail = #{detail}
  		</set>
  		<where>
  			tran_no = #{tranNo}
  		</where>
  	</update>
  	
  	<delete id="deleteReview" parameterType="int">
  		DELETE review
  		<where>
  			tran_no = #{tranNo}
		</where>
  	</delete>
  	
  	<sql id="getReviewListSql">
  		SELECT r.tran_no, r.prod_no, r.user_id, r.grade, r.detail, r.review_date
  		FROM review r
  		<where>
  			<if test="prodNo!=null">
  				AND r.prod_no = #{prodNo}
  			</if>
  			<if test="userId!=null">
  				AND user_id = #{userId}
  			</if>
  		</where>
  		ORDER BY 
  		<if test="search.searchCondition!=null">
  			<choose>
  				<when test="search.searchCondition==0">review_date DESC</when>
  				<when test="search.searchCondition==1">grade DESC, review_date DESC</when>
  				<when test="search.searchCondition==2">grade ASC, review_date DESC</when>
  				<otherwise>review_date DESC</otherwise>
  			</choose>
  		</if>
  		<if test="search.searchCondition==null">review_date DESC</if>
  	</sql>
  	
  	<select id="getTotalCount" parameterType="map" resultType="int">
  		SELECT COUNT(*) FROM (
  		<include refid="getReviewListSql"/>
  		)
  	</select>
  	
  	<select id="getReviewList" parameterType="map" resultMap="ReviewSelectMap">
  		SELECT * FROM (
  			SELECT ROWNUM row_num, vt.* FROM (
  				<include refid="getReviewListSql"/>
  			) vt
  			WHERE ROWNUM &lt;= #{search.currentPage}*#{search.pageSize}
  		)
  		<where>
  			row_num >= ((#{search.currentPage}-1)*#{search.pageSize}+1)
  		</where>
  	</select>
  	
</mapper>